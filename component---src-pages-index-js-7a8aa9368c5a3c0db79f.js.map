{"version":3,"file":"component---src-pages-index-js-7a8aa9368c5a3c0db79f.js","mappings":"6IAuBA,IArBe,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAEpBC,EADcC,sCACDH,EAASI,SAE5B,OACE,uBAAKC,UAAU,iBAAiB,oBAAmBH,GACjD,4BAAOD,GACP,oCACK,IAAIK,MAAOC,cADhB,mBAGE,qBAAGC,KAAK,4BAAR,UAHF,oBAME,qBAAGA,KAAK,yFAAR,iBAMP,C,+CCVKC,EAAM,SAAC,GAA4C,IAAD,MAAzCC,EAAyC,EAAzCA,YAAmBC,GAAsB,EAA5BC,KAA4B,EAAtBD,OAAOV,EAAe,EAAfA,SAC/BY,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBL,MAExC,OACE,gCACE,6BAAQM,EAAkBN,EAAN,MAAiBM,EAAiBN,GACtD,wBAAMO,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAAS,UAAAN,EAAKG,oBAAL,mBAAmBK,cAAnB,eAA2BC,UAA3B,KAEX,wBAAMJ,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASJ,IACzCd,EAGN,EAEDQ,EAAIc,aAAe,CACjBb,YAAY,IAQd,K,mGC/BA,UAtBkB,SAAC,GAAiD,IAAvBc,EAAuB,EAA/CC,KAAQC,eAAwB1B,EAAe,EAAfA,SACnD,OACE,gBAAC,IAAD,CAAQA,SAAUA,GAChB,2BACEK,UAAU,YACVsB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYL,EAAKM,YAAYnB,OAC1C,wCAAgBa,EAAKM,YAAYC,aAEnC,2BACEC,wBAAyB,CAAEC,OAAQT,EAAKU,MACxCL,SAAS,gBAEX,4BAIP,EASM,IAAMM,EAAO,SAAC,GAAuC,IAAbX,EAAa,EAArCC,KAAQC,eAC7B,OACE,gBAAC,IAAD,CACEf,MAAOa,EAAKM,YAAYnB,MACxBD,YAAac,EAAKM,YAAYpB,aAAec,EAAKY,SAGvD,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\n\nconst Layout = ({ location, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        {` `}\n        hosted on{` `}\n        <a href=\"https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages\">\n          Github Pages\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data: { markdownRemark: post }, location }) => {\n  return (\n    <Layout location={location}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>Developper: {post.frontmatter.developper}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    markdownRemark {\n      id\n      excerpt\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        developper\n        description\n      }\n    }\n  }\n`\n"],"names":["location","children","isRootPath","__PATH_PREFIX__","pathname","className","Date","getFullYear","href","Seo","description","title","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","post","data","markdownRemark","itemScope","itemType","itemProp","frontmatter","developper","dangerouslySetInnerHTML","__html","html","Head","excerpt"],"sourceRoot":""}